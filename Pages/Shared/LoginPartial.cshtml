@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WebProject.Core.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown p-0 m-0">
        <a class="nav-link dropdown-toggle text-black" href="#" id="loggedInDropdownMenu" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            <em>Hello @UserManager.GetUserName(User)!</em>
        </a>
        <ul class="dropdown-menu" aria-labelledby="loggedInDropdownMenu">
            <li>
                <form asp-controller="Account" asp-action="SignOut" method="post" id="logoutForm">
                    <button type="submit" class="dropdown-item fw-bold text-black">Sign out</button>
                </form>
            </li>
            <li>
                <a class="dropdown-item fw-bold text-black" asp-page="/Account/Listings">
                    <span aria-hidden="true"></span> Mani sludinājumi
                </a>
            </li>
            <li>
                <a class="dropdown-item fw-bold text-black" asp-page="/Account/Settings">
                    <span aria-hidden="true"></span> Iestatījumi
                </a>
            </li>
            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdminLogin")).Succeeded)
            {
                <li>
                    <a class="dropdown-item fw-bold text-black" asp-page="/Account/AdminDashboard">
                        <span aria-hidden="true"></span> Admin dashboard
                    </a>
                </li>
            }
        </ul>
    </li>
}
else
{
    <li class="nav-item p-0 m-0">
        <a class="nav-link fw-bold text-black px-1" asp-page="/Account/Login">
            <span aria-hidden="true"></span> Pieslēgties
        </a>
    </li>
}