@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WebProject.Pages.Shared
@using Infrastructure.Services
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<div class="mt-2 py-5">
    <div class="container-fluid">
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-3 @(Model.Listings.Count <= 0 ? "justify-content-center" : string.Empty)">
            @if (Model.Listings.Count > 0)
            {
                @foreach (var listing in Model.Listings)
                {
                    <div class="col">
                        <a asp-controller="Listings" asp-route-id="@listing.Encode()" class="text-decoration-none text-black">
                            <div class="card shadow-sm d-flex flex-column align-items-stretch h-100 bg-filler">
                                @{ await Html.RenderPartialAsync("Shared/ImageGalleryPartial", new ImageGalleryModel { Images = listing.Images, GalleryId = listing.Id }); }
                                <div class="card-body album-listing-body d-flex flex-column justify-content-between">
                                    <h5 class="fs-3 card-title text-primary">@listing.Title</h5>
                                    <p class="card-text truncated-text">
                                        @listing.Description
                                    </p>
                                    <div class="d-flex justify-content-between align-items-center flex-fill">
                                        <strong class="fs-4 text-primary">@listing.DisplayPrice</strong>
                                        <small class="text-secondary">@GetCreationDateString(listing.Created!.Value)&nbsp;</small>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            }
            else
            {
                <h1 class="text-center fs-3">Sludinājumu nav!</h1>
            }
        </div>
        <div class="row row-cols-1 pt-2">
            <div class="col d-flex justify-content-end">
                <nav aria-label="Listing navigation">
                    <ul class="pagination">
                        <li class="page-item"><a class="page-link  @(Model.PageNumber == 1 ? "disabled" : string.Empty)" href="@Model.PrevPage">Nākamā</a></li>
                        @foreach (var pageNr in new [] { -1, 0, 1 })
                        {

                            var relPage = Model.PageNumber + pageNr;
                            
                            // Ja esam pirmajā pieskaitām visām 1
                            relPage += Model.PageNumber == 1 ? 1 : 0;
                            
                            // Ja atrodamies pēdējajā lapā, atņemt visām lpp -1
                            relPage += Model.PageNumber == Model.MaxPageNumber ? -1 : 0;
                            
                            <li class="page-item">
                                <a class="page-link @(Model.PageNumber == relPage ? "active" : string.Empty)" href="@Url.Page("/Index", new { listingPage = relPage, search = Model.SearchParam }) ">
                                    @relPage
                                </a>
                            </li>    
                        }
                        <li class="page-item"><a class="page-link @(Model.PageNumber == Model.MaxPageNumber ? "disabled" : string.Empty)" href="@Model.NextPage">Iepriekšējā</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>
@functions {
    string GetCreationDateString(DateTime? dateTime)
    {
        // Nav datums
        if (!dateTime.HasValue)
            return "&nbsp;";    
        
        // Atšķirība starp sistēmas un ievades laiku
        var delta = DateTime.Now - dateTime.Value;
        // Ja mazāk vai vienāds tad parādīt Now
        if (delta.TotalSeconds <= 5)
            return "Now";
        
        // Ja mazāk vai vienāds par 60 sekundēm tad parādīt sekundes
        if (delta.TotalSeconds <= 60)
            return $"{(int)delta.TotalSeconds} secs";
        
        // Ja mazāk vai vienāds par 60 minūtēm tad parādīt minūtes
        if (delta.TotalMinutes <= 60)
            return $"{(int)delta.TotalMinutes} mins";
        
        return string.Empty;
    }
}
